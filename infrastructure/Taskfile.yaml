version: '3'

env:
  SSH: '{{if .REMOTE_HOST}}ssh {{.REMOTE_HOST_USERNAME}}@{{.REMOTE_HOST}}{{else}}{{end}}'

tasks:
  model-store-init:
    cmds:
      - "{{.SSH}} mkdir -p {{.MODEL_STORE_DIR}}"


  microk8s-install:
    cmds:
      - "{{.SSH}} sudo snap install microk8s --channel=classic"

  microk8s-plugins:
    cmds:
      - "{{.SSH}} microk8s enable gpu"
      - "{{.SSH}} microk8s enable registry"

  microk8s-config:
    cmds:
      - "{{.SSH}} microk8s config"

  microk8s-monitoring:
    cmds:
      - "{{.SSH}} microk8s enable metrics-server"
      - "{{.SSH}} microk8s enable observability"

  nvidia-gpu-exporter:
    cmds:
      - "{{.SSH}} microk8s helm repo add utkuozdemir https://utkuozdemir.org/helm-charts"
      - "{{.SSH}} microk8s helm install gpu-exporter utkuozdemir/nvidia-gpu-exporter --namespace observability"

  argo-install:
    cmds:
      - "kubectl create namespace argo &2>1"
      - "kubectl apply -n argo -f https://github.com/argoproj/argo-workflows/releases/download/v3.4.5/install.yaml"
      - >  
          kubectl patch deployment \
            argo-server \
            --namespace argo \
            --type='json' \
            -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/args", "value": [
              "server",
              "--auth-mode=server"
            ]}]'

  serve-prometheus:
    cmds:
      - "kubectl port-forward -n observability svc/kube-prom-stack-kube-prome-prometheus 9090:9090"

  serve-grafana:
    cmds:
      - "kubectl port-forward -n observability svc/kube-prom-stack-grafana 3000:80"

  serve-argo:
    cmds:
      - "kubectl -n argo port-forward deployment/argo-server 2746:2746"

  serve-all:
    deps:
      - task: serve-prometheus
      - task: serve-grafana
      - task: serve-argo